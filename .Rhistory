DiagrammeR::grViz("d_figure_1.dot")
install.packages("pwr")
library(pwr)
?pwr.ft.test()
?pwr.f2.test()
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = NULL, # sample size to be calculated
f2 = .35, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = NULL, # sample size to be calculated
f2 = .95, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
source("../../dyx/code/1_libraries.R")
source("../../dyx/code/2_intake.R")
library(tidyverse)
# data intake
df <- read_csv("dyx-data-sample.csv")
df
summary(df)
df <- df[df$hour==7,]
df
# Amount of variance
var(df$DYX)
# data intake
df <- read_csv("dyx-data-sample.csv") %>% na.omit()
df <- df[df$hour==7,]
# Amount of variance
var(df$DYX)
# Amount of variance
a <- var(df$DYX[df$PETdiff_2==0]))
# Amount of variance
a <- var(df$DYX[df$PETdiff_2==0])
b <- var(df$DYX[df$PETdiff_2==1])
a
b
# Amount of variance (a = control, b = testing condition)
ab <- var(df$DYX)
a <- var(df$DYX[df$PETdiff_2==0])
ab
a
f <- (ab^2 - a^2)/(1-ab^2)
f
# Amount of variance (a = control, b = testing condition)
ab <- var(df$DYX)
a <- var(df$DYX[df$PETdiff_2==1])
f <- (ab^2 - a^2)/(1-ab^2)
f
# Amount of variance (a = control, b = testing condition)
ab <- var(df$DYX)
a <- var(df$DYX[df$PETdiff_2==0])
f <- (ab^2 - a^2)/(1-ab^2)
f
# Amount of variance (a = control, b = testing condition)
ab <- var(df$DYX)
a <- var(df$DYX[df$PETdiff_2==0])
f <- (ab - a)/(1-ab)
f
# Amount of variance (a = control, b = testing condition)
ab <- var(df$DYX)
a <- var(df$DYX[df$PETdiff_2==1])
f <- (ab - a)/(1-ab)
f
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = 150, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = 120, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = NULL, # sample size to be calculated
f2 = .05, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = NULL, # sample size to be calculated
f2 = .15, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 3, # number of exposures... dyx = 1
v = 120, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 5, # number of exposures... dyx = 1
v = 120, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .05, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 1, # number of exposures... dyx = 1
v = 120, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .01, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 3, # number of exposures... dyx = 1
v = 120, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .01, # alpha
power = 0.8 # 1 - beta = 80%
)
pwr.f2.test(
u = 7, # number of exposures... dyx = 1
v = 120, # sample size to be calculated
f2 = NULL, # effect size (cohen effect size.. f2 = 0.35 is large)
sig.level = .01, # alpha
power = 0.8 # 1 - beta = 80%
)
DiagrammeR::grViz("d_figure_1.dot")
# Libraries
library(pwr)
library(tidyverse)
# data intake
df <- read_csv("dyx-data-sample.csv") %>% na.omit()
df <- df[df$hour==7,]
df$DYX %>% summary()
sd(df$DYX)
sd(df$DYX[df$PETdiff_2==1])
sd(df$DYX[df$PETdiff_2==0])
mean(df$DYX[df$PETdiff_2==0])
mean(df$DYX[df$PETdiff_2==1])
summary(df)
DiagrammeR::grViz("d_figure_1.dot")
# Libraries
library(pwr)
library(tidyverse)
# data intake
df <- read_csv("dyx-data-sample.csv") %>% na.omit()
df <- df[df$hour==7,]
# For both aims
pwr.2p.test(h = ES.h(p1 = 0.55, p2 = 0.50), sig.level = 0.05, power = .80)
pwr.2p.test(
h= ES.h(p1 = .20, p2 = .10),
sig.level = .05,
power = .80)
pwr.2p2n.test(h = 0.2,
n1 = 20,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.2,
n1 = 20,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.2,
n1 = 40,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.2,
n1 = 40,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.2,
n1 = 400,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.2,
n1 = 300,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.2,
n1 = 100,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.3,
n1 = 200,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.3,
n1 = 100,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.3,
n2 = 100,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.4,
n3 = 100,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.4,
n1 = 100,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.45,
n1 = 100,
power = 0.8,
sig.level = 0.05)
pwr.2p2n.test(h = 0.50,
n1 = 100,
power = 0.8,
sig.level = 0.05)
